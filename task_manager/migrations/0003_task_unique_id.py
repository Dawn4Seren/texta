# Generated by Django 2.0.2 on 2019-01-23 14:21

import uuid
import os
from django.db import migrations, models
from utils.helper_functions import get_wildcard_files
from texta.settings import MODELS_DIR
from texta.settings import PROTECTED_MEDIA


def combine_names(apps, schema_editor):
    
    Task = apps.get_model('task_manager', 'Task')
    for i, task in enumerate(Task.objects.all()):
        newuuid = uuid.uuid4()
        print(newuuid)
        task.unique_id = newuuid#newid
        task.save()




def rename_files(task):
    # file_path = os.path.join(MODELS_DIR, task.task_type, "model_{}".format(task.unique_id))
    # media_path = os.path.join(PROTECTED_MEDIA, "task_manager/", task.task_type, "model_{}".format(task.unique_id))
    file_path = os.path.join(MODELS_DIR, task.task_type, "model_{}".format(task.id))
    media_path = os.path.join(PROTECTED_MEDIA, "task_manager/", task.task_type, "model_{}".format(task.id))

    model_files = get_wildcard_files(file_path)
    media_files = get_wildcard_files(media_path)

    for path, filename in model_files:
        if os.path.exists(path):
            pass
            # TODO rename/create folders if dont exist with the task manager base worker inherited function
            # os.rename(path, path.replace(filename, '{}/model_{}'.format(task.task_type, task.unique_id), 1))

    for path, filename in media_files:
        if os.path.exists(path):
            pass
            # TODO rename/create folders if dont exist with the task manager base worker inherited function
            # os.rename(path, path.replace(filename, 'media_{}'.format(task.unique_id), 1))
            # os.remove(path)


class Migration(migrations.Migration):

    dependencies = [
        ('task_manager', '0002_auto_20190123_1420'),
    ]

    operations = [
        migrations.AddField(
            model_name='task',
            name='unique_id',
            field=models.UUIDField(default=uuid.uuid4),
        ),

        migrations.RunPython(combine_names),

        migrations.AlterField(
            model_name='task',
            name='unique_id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
    ]